Boundary traversal

#include<bits/stdc++.h>
using namespace std;

struct node{
	int data;
	node* left;
	node* right;
	
	node(int val)
	{
		data=val;
		left=NULL;
		right=NULL;
	}
};

void printleaves(node* root)
{
	if(root==NULL)
	return;
	
	printleaves(root->left);
	if(!root->left && !root->right)
	cout<<root->data<<" ";
	printleaves(root->right);
	
}

void boundaryleft(node* root){
	if(root == NULL)
	return;
	
	if(root->left)
	{
	cout<<root->data<<" ";
	boundaryleft(root->left);
	
			}
	
	else if(root->right)
	{
	cout<<root->data<" ";
	boundaryleft(root->right);
}
}

void boundaryright(node* root){
	if(root==NULL)
	return;
	
		if(root->right){
		
		boundaryright(root->right);
		cout<<root->data<<" ";
	}
	
	else if(root->left)
	{

	boundaryleft(root->left);
		cout<<root->data<" ";
}
}

void boundary(node* root)
{
	if(root==NULL)
	return;
	
	cout<<root->data<<" ";
	
	boundaryleft(root->left);
	
	printleaves(root->left);
	printleaves(root->right);
	
	boundaryright(root->right);
}

int main()
{
	node* root = new node(20);
	root->left=new node(9);
    root->left->left = new node(4);
    root->left->left->left=new node(5);
    root->left->left->right=new node(6);
    root->left->right = new node(12);
    root->left->right->left = new node(10);
    root->left->right->right = new node(14);
    root->right = new node(22);
    root->right->right = new node(25);

    boundary(root);

    return 0;
}