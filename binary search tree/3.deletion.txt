Deletion

#include<bits/stdc++.h>
using namespace std;

struct node{
	int data;
	node* left;
	node* right;
	int count;
	
	node(int val){
	data=val;
	left=NULL;
	right=NULL;
	count=1;
}
};
node* insert(node* &root,int value)
{
	if(root == NULL){
	root=new node(value);
	return root;
}
	
	if(value == root->data)
	{
		(root->count)++;
		return root ;
		
	}
	
	if(value<root->data)
	insert(root->left,value);
	
	else
	insert(root->right,value);
	return root;
}

void inorder(node* root ){
	if(root == NULL)
	return;
	
   inorder(root->left);
	cout<<root->data<<" ";
	inorder(root->right);
}

node* minvalue(node* root)
{
	node* current = root;
 
    while (current && current->left != NULL)
        current = current->left;
 
    return (current);
}


node* del(node* root,int value)
{
  if(root ==NULL)
  return 0;
  
  if(value<root->data)
  root->left=del(root->left,value);
  
  if(value>root->data)
  root->right=del(root->right,value);
  
  else{
  	if(root->left==NULL && root->right==NULL)
  	return 0;
  	
  	else if(root->left == NULL){
  	node* temp=root->right;
  	delete root;
  	return temp;
  }
  
  	
  	else if(root->right == NULL){
  	node* temp=root->left;
  	delete root;
  	return temp;
  }
  
  
  	node* temp=minvalue(root->right);
  	root->data=temp->data;
  	root->right=del(root->right,value);
  	
  	
  }
	
}

int main()
{

    node* root = NULL;
	insert(root, 50);
     insert(root, 30);
     insert(root, 20);
     insert(root, 40);
     insert(root, 70);
     insert(root, 60);
      insert(root, 80);
    
  
    inorder(root);
    
     cout << "\nDelete 20\n";
    root = del(root, 50);
    
   inorder(root);
 
}
