#include<bits/stdc++.h>
using namespace std;

class Graph{
    unordered_map<string,list<pair<string,int> > > l;
    
    public:
    void addedge(string x,string y,bool unidic,int wt)
    {
        l[x].push_back(make_pair(y,wt));
        if(unidic)
        {
            l[y].push_back(make_pair(x,wt));
        }
    }
    
    void printList()
    {
        //itearate over all key in map 
        for(auto p:l){
        string city=p.first;
        list<pair<string,int>> nbrs=p.second;
        
        cout<<city<<"->";
        
        //itearate over of the neighbours
        for(auto nbr:nbrs){
        string dest=nbr.first;
        int dist=nbr.second;
        cout<<dest<<" "<<dist<<" ";
        }
        
        cout<<endl;
        }
    }
    
};

int main()
{
    Graph g;
    g.addedge("A","B",true,20);
    g.addedge("B","D",true,30);
    g.addedge("C","A",true,10);
    g.addedge("C","D",true,40);
    g.addedge("A","D",false,50);
    
    g.printList();
}
