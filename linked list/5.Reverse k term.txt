Reverse k term

#include<bits/stdc++.h>
using namespace std;

struct node{
	int data;
	node* link;
};

node* head=NULL;
void print(node* ptr)
{
	while(ptr!=NULL)
	{
		cout<<ptr->data<<"->";
		ptr=ptr->link;
	}
	cout<<"NULL";
}

void push(node** head_ref,int new_data){
	node* new_node=new node;
	new_node->data=new_data;
	new_node->link=(*head_ref);
	*head_ref=new_node;
}
node* reversek(node* head,int k){
	if(!head)
	return NULL;
	
	node* current=head;
	node* next=NULL;
	node* prev=NULL;
	int count=0;
	while(current!=NULL && count<k){
		next=current->link;
	  current->link=prev;
	  
	  prev=current;
	  current=next;
      count++;
	}
	if(next!=NULL)
	head->link=reversek(next,k);
	
	return prev;
}
int main()
{
    push(&head, 9);
    push(&head, 8);
    push(&head, 7);
    push(&head, 6);
    push(&head, 5);
    push(&head, 4);
    push(&head, 3);
    push(&head, 2);
    push(&head, 1);
 
    cout << "Given linked list \n";
    print(head);
    head = reversek(head, 3);
 
    cout << "\nReversed Linked list \n";
    print(head);
 
    return (0);
}